{
  "name": "comment-blocks",
  "displayName": "Comment Blocks",
  "description": "Create blocks of comment headers",
  "publisher": "ArturoDent",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/ArturoDent/comment-blocks"
  },
  "funding": {
    "url": "https://www.buymeacoffee.com/ArturoDent"
  },
  "version": "0.5.2",
  "preview": true,
  "engines": {
    "vscode": "^1.46.0"
  },
  "categories": [
    "Other",
    "Snippets"
  ],
  "keywords": [
    "comments",
    "blocks"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "browser": "./out/extension.js",
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "contributes": {
    "jsonValidation": [
      {
        "fileMatch": "%APP_SETTINGS_HOME%/keybindings.json",
        "url": "./src/keybindings.schema.jsonc"
      },
      {
        "fileMatch": "%APP_SETTINGS_HOME%/profiles/*/keybindings.json",
        "url": "./src/keybindings.schema.jsonc"
      }
    ],
    "commands": [
      {
        "command": "comment-blocks.createBlock",
        "category": "Comment Blocks",
        "title": "Create"
      }
    ],
    "configuration": [
      {
        "title": "Comment Blocks",
        "id": "CommentBlocks",
        "properties": {
          "commentBlocks.defaults": {

            "markdownDescription": "Defaults to be used unless overridden in keybindings.",
            "type": "object",
            "scope": "language-overridable",

            "additionalProperties": false,
            "properties": {
              "selectCurrentLine": {
                "order": 0,
                "description": "Should the current line automatically be selected.",
                "type": "boolean",
                "default": true
              },
              "keepIndentation": {
                "order": 1,
                "description": "Use any existing indentation - start the comment after the indentation.",
                "type": "boolean",
                "default": true
              },
              "lineLength": {
                "order": 2,
                "description": "Number of total characters in each line.",
                "oneOf": [
                  {
                    "type": "integer",
                    "minimum": 0
                  },
                  {
                    "type": "string",
                    "const": "${getInput}"
                  },
                  {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "integer",
                          "minimum": 0
                        },
                        {
                          "type": "string",
                          "const": "${getInput}"
                        }
                      ]
                    }
                  }
                ],
                "default": 80
              },
              "subjects": {
                "order": 3,
                "description": "The text, usually the selected text, that will be justified on each line.  An empty string in the array means there will be no text justified on that line.",
                "oneOf": [
                  {
                    "type": "array",
                    "default": [ "", "${selectedText}", "" ],
                    "additionalItems": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "string",
                    "default": "${selectedText}",
                    "additionalItems": true
                  }
                ]
              },
              "justify": {
                "order": 4,
                "description": "Where to place the selected text  Options: center, left, right.",
                "oneOf": [
                  {
                    "type": "string",
                    "default": "center",
                    "enum": [
                      "center",
                      "left",
                      "right",
                      "",
                      "${getInput}"
                    ],
                    "enumDescriptions": [
                      "Center the selected text.",
                      "Put the selected text on the left - after the start characters and leftGap.",
                      "Put the selected text on the right.",
                      "Empty string: use default or previous entry.",
                      "Open an input box for the value of justify."
                    ]
                  },
                  {
                    "type": "array",
                    "default": [ "", "center", "" ],
                    "additionalItems": false,
                    "items": {
                      "type": "string",
                      "anyOf": [
                        {
                          "const": "center"
                        },
                        {
                          "const": "left"
                        },
                        {
                          "const": "right"
                        },
                        {
                          "const": ""
                        },
                        {
                          "const": "${getInput}"
                        }
                      ]
                    }
                  }
                ]
              },
              "startText": {
                "order": 5,
                "description": "Text to put at the start of each line.",
                "default": "${BLOCK_COMMENT_START}",
                "examples": [
                  "${LINE_COMMENT}"
                ],
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "additionalItems": true
                    }
                  }
                ]
              },
              "endText": {
                "order": 6,
                "description": "Text to put at the end of each line.",
                "default": "${BLOCK_COMMENT_END}",
                "examples": [
                  "${LINE_COMMENT}"
                ],
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "additionalItems": true
                    }
                  }
                ]
              },
              "gapLeft": {
                "order": 7,
                "description": "Number of spaces to the left of the selected text.  Minimum = 0.",
                "oneOf": [
                  {
                    "type": "integer",
                    "minimum": 0,
                    "default": 3
                  },
                  {
                    "type": "string",
                    "const": "${getInput}"
                  },
                  {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "integer",
                          "minimum": 0,
                          "default": 3
                        },
                        {
                          "type": "string",
                          "const": "${getInput}"
                        }
                      ]
                    }
                  }
                ]
              },
              "gapRight": {
                "order": 8,
                "description": "Number of spaces to the right of the selected text.  Minimum = 0.",
                "oneOf": [
                  {
                    "type": "integer",
                    "minimum": 0,
                    "default": 3
                  },
                  {
                    "type": "string",
                    "const": "${getInput}"
                  },
                  {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "integer",
                          "minimum": 0,
                          "default": 3
                        },
                        {
                          "type": "string",
                          "const": "${getInput}"
                        }
                      ]
                    }
                  }
                ]
              },
              "padLines": {
                "order": 9,
                "default": "-",
                "description": "Character to be used to pad around the justigied text, isf any, in each line.",
                "examples": ["-", "*", "/", " "],
                "oneOf": [
                  {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 1
                  },
                  {
                    "type": "string",
                    "const": "${getInput}",
                    "description": "To input a string of one character only."
                  },
                  {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "type": "string",
                          "minLength": 0,
                          "maxLength": 1
                        },
                        {
                          "type": "string",
                          "const": "${getInput}",
                          "description": "To input a string of one character only."
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      }
    ]
  },
  "scripts": {
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.1",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.11.0",
    "@types/vscode": "^1.46.0",
    "@typescript-eslint/eslint-plugin": "^2.30.0",
    "@typescript-eslint/parser": "^2.30.0",
    "eslint": "^6.8.0",
    "glob": "^7.1.6",
    "mocha": "^7.1.2",
    "typescript": "^3.8.3",
    "vscode-test": "^1.3.0"
  },
  "dependencies": {
    "jsonc-parser": "^3.3.1"
  }
}
